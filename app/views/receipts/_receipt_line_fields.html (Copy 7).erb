<!-- app/views/receipts/_receipt_line_fields.html.erb -->
<tr class="receipt-line">

 
  
  <td>
    <%= f.select :account_type, options_for_select(
      [['Bank', 'bank'], ['Customer', 'customer'], ['G/L Account', 'g/l_account']], f.object.account_type
    ), {}, { id: 'account_type', class: 'form-control' } %>
  </td>
  <td>
    <div id="account_no_select">
     
  <%= f.select :account_no, [], { prompt: "Select Account", selected: f.object.account_no }, { class: "form-control", id: "account_no" } %>

      
    </div>
    
  </td>
  
  
  <td>
    <%= f.select :account_type, options_for_select(
      [['Bank', 'bank'], ['Customer', 'customer'], ['G/L Account', 'g/l_account']], f.object.account_type
    ), {}, { class: 'form-control account_type' } %>
  </td>
  <td>
    <div class="account_no_select">
      <%= f.select :account_no, [], { prompt: "Select Account" }, { class: "form-control account_no" } %>
    </div>
 

  
  
  
  
  
  
  
  
 
  <td><%= f.text_field :account_name %></td>
  <td><%= f.text_field :amount %></td>
  <td><%= f.text_field :invoiceno %></td>
  <td><%= link_to 'Remove', '#', class: 'remove-receipt-line btn btn-danger' %></td>
  

</tr>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const accountTypeField = document.getElementById("account_type");
  const accountNoFieldContainer = document.getElementById("account_no_select");

  // Restore account_type and account_no from localStorage
  const savedAccountType = localStorage.getItem("account_type");
  const savedAccountNo = localStorage.getItem("account_no");

  if (savedAccountType) {
    accountTypeField.value = savedAccountType;

    // Fetch and repopulate account_no options if account_type exists
    fetchOptions(savedAccountType, savedAccountNo);
  }

  // Save account_type on change
  accountTypeField.addEventListener("change", (event) => {
    const selectedType = event.target.value;
    localStorage.setItem("account_type", selectedType);
    fetchOptions(selectedType, null); // Reset account_no when type changes
  });

  // Save account_no on change
  accountNoFieldContainer.addEventListener("change", (event) => {
    const accountNoField = accountNoFieldContainer.querySelector("select");
    if (accountNoField) {
      const selectedAccountNo = accountNoField.value;
      localStorage.setItem("account_no", selectedAccountNo);
    }
  });

  // Fetch options and populate account_no
  function fetchOptions(accountType, selectedAccountNo) {
    let url;

    if (accountType === "bank") {
      url = "/banks";
    } else if (accountType === "customer") {
      url = "/customers";
    } else if (accountType === "g/l_account") {
      url = "/gl_accounts";
    }

    if (url) {
      fetch(url)
        .then((response) => response.json())
        .then((data) => {
          const options = data
            .map(
              (item) =>
                `<option value="${item.id}" ${
                  selectedAccountNo === String(item.id) ? "selected" : ""
                }>${item.name}</option>`
            )
            .join("");
          accountNoFieldContainer.innerHTML = `
            <select name="receipt[receipt_lines_attributes][0][account_no]" id="account_no" class="form-control">
              <option value="">Select Account</option>
              ${options}
            </select>`;
        })
        .catch((error) => console.error("Error fetching account_no options:", error));
    } else {
      accountNoFieldContainer.innerHTML = "<em>Please select an account type.</em>";
    }
  }
});

      

</script>










